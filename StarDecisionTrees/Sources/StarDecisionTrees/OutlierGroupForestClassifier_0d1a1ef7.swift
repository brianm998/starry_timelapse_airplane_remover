/*
   written by decision_tree_generator on 2024-05-29 06:03:59 +0000.

   The classifications of 8 trees are combined here with weights from test data.
   
   Trees were computed to the maximum depth possible

   Trees were NOT pruned with test data

   tree(StarCore.DecisionTreeParams(name: "5cb2eddf", inputSequences: ["/qp/star_validated/05_28_2024-optimized-train"], positiveTrainingSize: 37830, negativeTrainingSize: 7195483, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.nearbyDirectOverlapScore, StarCore.OutlierGroup.Feature.boundingBoxOverlapScore], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))

   tree(StarCore.DecisionTreeParams(name: "9dbd24c3", inputSequences: ["/qp/star_validated/05_28_2024-optimized-train"], positiveTrainingSize: 37830, negativeTrainingSize: 7195483, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.nearbyDirectOverlapScore, StarCore.OutlierGroup.Feature.boundingBoxOverlapScore], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))

   tree(StarCore.DecisionTreeParams(name: "31e98732", inputSequences: ["/qp/star_validated/05_28_2024-optimized-train"], positiveTrainingSize: 37830, negativeTrainingSize: 7195484, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.nearbyDirectOverlapScore, StarCore.OutlierGroup.Feature.boundingBoxOverlapScore], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))

   tree(StarCore.DecisionTreeParams(name: "4dd66313", inputSequences: ["/qp/star_validated/05_28_2024-optimized-train"], positiveTrainingSize: 37831, negativeTrainingSize: 7195484, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.nearbyDirectOverlapScore, StarCore.OutlierGroup.Feature.boundingBoxOverlapScore], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))

   tree(StarCore.DecisionTreeParams(name: "d8f6c0cd", inputSequences: ["/qp/star_validated/05_28_2024-optimized-train"], positiveTrainingSize: 37831, negativeTrainingSize: 7195484, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.nearbyDirectOverlapScore, StarCore.OutlierGroup.Feature.boundingBoxOverlapScore], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))

   tree(StarCore.DecisionTreeParams(name: "cd40a615", inputSequences: ["/qp/star_validated/05_28_2024-optimized-train"], positiveTrainingSize: 37831, negativeTrainingSize: 7195484, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.nearbyDirectOverlapScore, StarCore.OutlierGroup.Feature.boundingBoxOverlapScore], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))

   tree(StarCore.DecisionTreeParams(name: "0e82086a", inputSequences: ["/qp/star_validated/05_28_2024-optimized-train"], positiveTrainingSize: 37831, negativeTrainingSize: 7195484, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.nearbyDirectOverlapScore, StarCore.OutlierGroup.Feature.boundingBoxOverlapScore], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))

   tree(StarCore.DecisionTreeParams(name: "c1323e72", inputSequences: ["/qp/star_validated/05_28_2024-optimized-train"], positiveTrainingSize: 37831, negativeTrainingSize: 7195484, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.nearbyDirectOverlapScore, StarCore.OutlierGroup.Feature.boundingBoxOverlapScore], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))


 */

import Foundation
import StarCore

// DO NOT EDIT THIS FILE
// DO NOT EDIT THIS FILE
// DO NOT EDIT THIS FILE

public final class OutlierGroupForestClassifier_0d1a1ef7: NamedOutlierGroupClassifier {

    public init() { }

    public let name = "0d1a1ef7"
    
    public let type: ClassifierType = .forest(DecisionForestParams(name: "0d1a1ef7",
                                                                   treeCount: 8,
                                                                   treeNames: [ "5cb2eddf", "9dbd24c3", "31e98732", "4dd66313", "d8f6c0cd", "cd40a615", "0e82086a", "c1323e72"]))

    let tree_5cb2eddf = OutlierGroupDecisionTreeForest_5cb2eddf()
    let tree_9dbd24c3 = OutlierGroupDecisionTreeForest_9dbd24c3()
    let tree_31e98732 = OutlierGroupDecisionTreeForest_31e98732()
    let tree_4dd66313 = OutlierGroupDecisionTreeForest_4dd66313()
    let tree_d8f6c0cd = OutlierGroupDecisionTreeForest_d8f6c0cd()
    let tree_cd40a615 = OutlierGroupDecisionTreeForest_cd40a615()
    let tree_0e82086a = OutlierGroupDecisionTreeForest_0e82086a()
    let tree_c1323e72 = OutlierGroupDecisionTreeForest_c1323e72()

    // returns -1 for negative, +1 for positive
    public func classification(of group: ClassifiableOutlierGroup) -> Double {
        var total: Double = 0.0

        total += self.tree_5cb2eddf.classification(of: group) * 0.995227083687165
        total += self.tree_9dbd24c3.classification(of: group) * 0.9953457533673883
        total += self.tree_31e98732.classification(of: group) * 0.9952989387228965
        total += self.tree_4dd66313.classification(of: group) * 0.9952172852732015
        total += self.tree_d8f6c0cd.classification(of: group) * 0.9952804306076323
        total += self.tree_cd40a615.classification(of: group) * 0.9952913177342583
        total += self.tree_0e82086a.classification(of: group) * 0.9952934951595835
        total += self.tree_c1323e72.classification(of: group) * 0.9952771644696445

        return total / 8
    }

    // returns -1 for negative, +1 for positive
    public func classification (
       of features: [OutlierGroup.Feature],   // parallel
       and values: [Double]                   // arrays
    ) -> Double
    {
        var total: Double = 0.0
        
        let featureData = OutlierGroupFeatureData(features: features, values: values)
        
        total += self.tree_5cb2eddf.classification(of: featureData) * 0.995227083687165
        total += self.tree_9dbd24c3.classification(of: featureData) * 0.9953457533673883
        total += self.tree_31e98732.classification(of: featureData) * 0.9952989387228965
        total += self.tree_4dd66313.classification(of: featureData) * 0.9952172852732015
        total += self.tree_d8f6c0cd.classification(of: featureData) * 0.9952804306076323
        total += self.tree_cd40a615.classification(of: featureData) * 0.9952913177342583
        total += self.tree_0e82086a.classification(of: featureData) * 0.9952934951595835
        total += self.tree_c1323e72.classification(of: featureData) * 0.9952771644696445

        return total / 8
    }
}