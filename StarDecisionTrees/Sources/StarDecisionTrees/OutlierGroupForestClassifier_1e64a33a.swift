/*
   written by decision_tree_generator on 2024-05-09 21:16:33 +0000.

   The classifications of 8 trees are combined here with weights from test data.
   
   Trees were computed to the maximum depth possible

   Trees were NOT pruned with test data

   tree(StarCore.DecisionTreeParams(name: "6c0a5733", inputSequences: ["/qp/star_validated/05_09_2024-just-one-train"], positiveTrainingSize: 10113, negativeTrainingSize: 4454216, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))

   tree(StarCore.DecisionTreeParams(name: "1bcdce7d", inputSequences: ["/qp/star_validated/05_09_2024-just-one-train"], positiveTrainingSize: 10113, negativeTrainingSize: 4454216, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))

   tree(StarCore.DecisionTreeParams(name: "791e9fb5", inputSequences: ["/qp/star_validated/05_09_2024-just-one-train"], positiveTrainingSize: 10113, negativeTrainingSize: 4454216, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))

   tree(StarCore.DecisionTreeParams(name: "c73b60e2", inputSequences: ["/qp/star_validated/05_09_2024-just-one-train"], positiveTrainingSize: 10113, negativeTrainingSize: 4454216, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))

   tree(StarCore.DecisionTreeParams(name: "ce1a75d5", inputSequences: ["/qp/star_validated/05_09_2024-just-one-train"], positiveTrainingSize: 10113, negativeTrainingSize: 4454216, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))

   tree(StarCore.DecisionTreeParams(name: "aa134949", inputSequences: ["/qp/star_validated/05_09_2024-just-one-train"], positiveTrainingSize: 10113, negativeTrainingSize: 4454217, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))

   tree(StarCore.DecisionTreeParams(name: "170f347a", inputSequences: ["/qp/star_validated/05_09_2024-just-one-train"], positiveTrainingSize: 10114, negativeTrainingSize: 4454217, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))

   tree(StarCore.DecisionTreeParams(name: "23a06028", inputSequences: ["/qp/star_validated/05_09_2024-just-one-train"], positiveTrainingSize: 10114, negativeTrainingSize: 4454217, decisionTypes: [StarCore.OutlierGroup.Feature.size, StarCore.OutlierGroup.Feature.width, StarCore.OutlierGroup.Feature.height, StarCore.OutlierGroup.Feature.centerX, StarCore.OutlierGroup.Feature.centerY, StarCore.OutlierGroup.Feature.minX, StarCore.OutlierGroup.Feature.minY, StarCore.OutlierGroup.Feature.maxX, StarCore.OutlierGroup.Feature.maxY, StarCore.OutlierGroup.Feature.hypotenuse, StarCore.OutlierGroup.Feature.aspectRatio, StarCore.OutlierGroup.Feature.fillAmount, StarCore.OutlierGroup.Feature.surfaceAreaRatio, StarCore.OutlierGroup.Feature.averagebrightness, StarCore.OutlierGroup.Feature.medianBrightness, StarCore.OutlierGroup.Feature.maxBrightness, StarCore.OutlierGroup.Feature.avgCountOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfFirst10HoughLines, StarCore.OutlierGroup.Feature.avgCountOfAllHoughLines, StarCore.OutlierGroup.Feature.maxThetaDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.maxRhoDiffOfAllHoughLines, StarCore.OutlierGroup.Feature.numberOfNearbyOutliersInSameFrame, StarCore.OutlierGroup.Feature.adjecentFrameNeighboringOutliersBestTheta, StarCore.OutlierGroup.Feature.histogramStreakDetection, StarCore.OutlierGroup.Feature.longerHistogramStreakDetection, StarCore.OutlierGroup.Feature.maxHoughTransformCount, StarCore.OutlierGroup.Feature.maxHoughTheta, StarCore.OutlierGroup.Feature.neighboringInterFrameOutlierThetaScore, StarCore.OutlierGroup.Feature.maxOverlap, StarCore.OutlierGroup.Feature.maxOverlapTimesThetaHisto, StarCore.OutlierGroup.Feature.pixelBorderAmount, StarCore.OutlierGroup.Feature.averageLineVariance, StarCore.OutlierGroup.Feature.lineLength], decisionSplitTypes: [StarCore.DecisionSplitType.median], maxDepth: Optional(-1), pruned: false))


 */

import Foundation
import StarCore

// DO NOT EDIT THIS FILE
// DO NOT EDIT THIS FILE
// DO NOT EDIT THIS FILE

public final class OutlierGroupClassifierForest_1e64a33a: NamedOutlierGroupClassifier {

    public init() { }

    public let name = "1e64a33a"
    
    public let type: ClassifierType = .forest(DecisionForestParams(name: "1e64a33a",
                                                                   treeCount: 8,
                                                                   treeNames: [ "6c0a5733", "1bcdce7d", "791e9fb5", "c73b60e2", "ce1a75d5", "aa134949", "170f347a", "23a06028"]))

    let tree_6c0a5733 = OutlierGroupDecisionTree_6c0a5733()
    let tree_1bcdce7d = OutlierGroupDecisionTree_1bcdce7d()
    let tree_791e9fb5 = OutlierGroupDecisionTree_791e9fb5()
    let tree_c73b60e2 = OutlierGroupDecisionTree_c73b60e2()
    let tree_ce1a75d5 = OutlierGroupDecisionTree_ce1a75d5()
    let tree_aa134949 = OutlierGroupDecisionTree_aa134949()
    let tree_170f347a = OutlierGroupDecisionTree_170f347a()
    let tree_23a06028 = OutlierGroupDecisionTree_23a06028()

    // returns -1 for negative, +1 for positive
    public func classification(of group: ClassifiableOutlierGroup) -> Double {
        var total: Double = 0.0

        total += self.tree_6c0a5733.classification(of: group) * 0.9971335231382012
        total += self.tree_1bcdce7d.classification(of: group) * 0.9971705668391845
        total += self.tree_791e9fb5.classification(of: group) * 0.9971211752378735
        total += self.tree_c73b60e2.classification(of: group) * 0.9971123553090679
        total += self.tree_ce1a75d5.classification(of: group) * 0.9970435598643848
        total += self.tree_aa134949.classification(of: group) * 0.9972552381557176
        total += self.tree_170f347a.classification(of: group) * 0.9971370511097234
        total += self.tree_23a06028.classification(of: group) * 0.9970664916792792

        return total / 8
    }

    // returns -1 for negative, +1 for positive
    public func classification (
       of features: [OutlierGroup.Feature],   // parallel
       and values: [Double]                   // arrays
    ) -> Double
    {
        var total: Double = 0.0
        
        total += self.tree_6c0a5733.classification(of: features, and: values) * 0.9971335231382012
        total += self.tree_1bcdce7d.classification(of: features, and: values) * 0.9971705668391845
        total += self.tree_791e9fb5.classification(of: features, and: values) * 0.9971211752378735
        total += self.tree_c73b60e2.classification(of: features, and: values) * 0.9971123553090679
        total += self.tree_ce1a75d5.classification(of: features, and: values) * 0.9970435598643848
        total += self.tree_aa134949.classification(of: features, and: values) * 0.9972552381557176
        total += self.tree_170f347a.classification(of: features, and: values) * 0.9971370511097234
        total += self.tree_23a06028.classification(of: features, and: values) * 0.9970664916792792

        return total / 8
    }
}
